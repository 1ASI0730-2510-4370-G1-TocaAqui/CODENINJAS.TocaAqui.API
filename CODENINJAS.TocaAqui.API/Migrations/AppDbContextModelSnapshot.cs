// <auto-generated />
using System;
using CODENINJAS.TocaAqui.API.Shared.Infrastructure.Persistence.EFC.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CODENINJAS.TocaAqui.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AdminContact")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("admin_contact");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("admin_name");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("equipment");

                    b.Property<int>("Genre")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("genre");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("image_url");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<decimal>("Payment")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("payment");

                    b.Property<int?>("PromoterId")
                        .HasColumnType("int")
                        .HasColumnName("promoter_id");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("publish_date");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("requirements");

                    b.Property<DateTime?>("SoundcheckDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("soundcheck_date");

                    b.Property<TimeSpan?>("SoundcheckTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("soundcheck_time");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time(6)")
                        .HasColumnName("time");

                    b.HasKey("Id")
                        .HasName("pk_event");

                    b.ToTable("event");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.EventApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("application_date");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contract_id");

                    b.Property<bool>("ContractSigned")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("contract_signed");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<bool>("IsInvited")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_invited");

                    b.Property<int?>("RiderTechnicalId")
                        .HasColumnType("int")
                        .HasColumnName("rider_technical_id");

                    b.Property<bool>("RiderUploaded")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("rider_uploaded");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_event_applicant");

                    b.HasIndex("ContractId")
                        .HasDatabaseName("ix_event_applicant_contract_id");

                    b.HasIndex("EventId")
                        .HasDatabaseName("ix_event_applicant_event_id");

                    b.HasIndex("RiderTechnicalId")
                        .HasDatabaseName("ix_event_applicant_rider_technical_id");

                    b.ToTable("event_applicant");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("artist_id");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("artist_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("event_date");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<string>("EventImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("event_image_url");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("event_location");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("event_name");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("message");

                    b.Property<int>("PromoterId")
                        .HasColumnType("int")
                        .HasColumnName("promoter_id");

                    b.Property<string>("PromoterName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("promoter_name");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_invitation");

                    b.HasIndex("EventId");

                    b.ToTable("invitation");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("content");

                    b.Property<int>("EventApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("event_application_id");

                    b.Property<string>("Signature")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("signature");

                    b.Property<DateTime?>("SignedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("signed_date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_contract");

                    b.HasIndex("EventApplicationId")
                        .IsUnique()
                        .HasDatabaseName("ix_contract_event_application_id");

                    b.ToTable("contract");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.RiderTechnical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("content");

                    b.Property<int>("EventApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("event_application_id");

                    b.HasKey("Id")
                        .HasName("pk_rider_technical");

                    b.HasIndex("EventApplicationId")
                        .IsUnique()
                        .HasDatabaseName("ix_rider_technical_event_application_id");

                    b.ToTable("rider_technical");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.IAM.Domain.Model.Aggregates.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("Genre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("genre");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("user");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.EventApplicant", b =>
                {
                    b.HasOne("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .HasConstraintName("fk_event_applicant_contract_contract_id");

                    b.HasOne("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_event_applicant_event_event_id");

                    b.HasOne("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.RiderTechnical", "RiderTechnical")
                        .WithMany()
                        .HasForeignKey("RiderTechnicalId")
                        .HasConstraintName("fk_event_applicant_rider_technical_rider_technical_id");

                    b.Navigation("Contract");

                    b.Navigation("RiderTechnical");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.Invitation", b =>
                {
                    b.HasOne("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.Contract", b =>
                {
                    b.HasOne("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.EventApplicant", null)
                        .WithOne()
                        .HasForeignKey("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.Contract", "EventApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contract_event_applicant_event_application_id");
                });

            modelBuilder.Entity("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.RiderTechnical", b =>
                {
                    b.HasOne("CODENINJAS.TocaAqui.API.Events.Domain.Model.Aggregates.EventApplicant", null)
                        .WithOne()
                        .HasForeignKey("CODENINJAS.TocaAqui.API.Events.Domain.Model.Entities.RiderTechnical", "EventApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rider_technical_event_applicant_event_application_id");
                });
#pragma warning restore 612, 618
        }
    }
}
